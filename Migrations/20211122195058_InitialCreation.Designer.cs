// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TicTacToe.Data;

namespace Tic_Tac_Toe.Migrations
{
    [DbContext(typeof(GamesDBContext))]
    [Migration("20211122195058_InitialCreation")]
    partial class InitialCreation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TicTacToe.Data.Game", b =>
                {
                    b.Property<int>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NumberOfMoves")
                        .HasColumnType("int");

                    b.Property<int?>("Player1PlayerId")
                        .HasColumnType("int");

                    b.Property<int?>("Player2PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("GameId");

                    b.HasIndex("Player1PlayerId");

                    b.HasIndex("Player2PlayerId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("TicTacToe.Data.Move", b =>
                {
                    b.Property<int>("MoveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("XCoordinate")
                        .HasColumnType("int");

                    b.Property<int>("YCoordinate")
                        .HasColumnType("int");

                    b.HasKey("MoveId");

                    b.HasIndex("GameId");

                    b.HasIndex("PlayerId");

                    b.ToTable("Moves");
                });

            modelBuilder.Entity("TicTacToe.Data.Player", b =>
                {
                    b.Property<int>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PlayerId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("TicTacToe.Data.Game", b =>
                {
                    b.HasOne("TicTacToe.Data.Player", "Player1")
                        .WithMany("Player1Games")
                        .HasForeignKey("Player1PlayerId");

                    b.HasOne("TicTacToe.Data.Player", "Player2")
                        .WithMany("Player2Games")
                        .HasForeignKey("Player2PlayerId");

                    b.Navigation("Player1");

                    b.Navigation("Player2");
                });

            modelBuilder.Entity("TicTacToe.Data.Move", b =>
                {
                    b.HasOne("TicTacToe.Data.Game", null)
                        .WithMany("Moves")
                        .HasForeignKey("GameId");

                    b.HasOne("TicTacToe.Data.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("TicTacToe.Data.Game", b =>
                {
                    b.Navigation("Moves");
                });

            modelBuilder.Entity("TicTacToe.Data.Player", b =>
                {
                    b.Navigation("Player1Games");

                    b.Navigation("Player2Games");
                });
#pragma warning restore 612, 618
        }
    }
}
